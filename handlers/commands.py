from aiogram import Router
from aiogram.filters import Command
from aiogram import types
from datetime import datetime, timedelta
import os
from dotenv import load_dotenv

from keyboards import inline, reply
from dictionary import const_dictionary
from functions import common_func, async_func

router = Router()

load_dotenv()
ADMIN_ID = int(os.getenv('ADMIN_ID'))
SECRET_WORD_LOGS = os.getenv('SECRET_WORD_LOGS')
SECRET_WORD_CONFIGS = os.getenv('SECRET_WORD_CONFIGS')

@router.message(Command('start'))
async def start_message(message: types.Message):
    update_text = (
    '–í–µ—Ä—Å–∏—è 1.0 ¬´–Ω–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Æ–ì–£¬ª —É–∂–µ –∑–¥–µ—Å—å! üéâ\n\n'
    '–ß—Ç–æ –Ω–æ–≤–æ–≥–æ:\n\n'
    'üìö –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤ –∏ –≥—Ä—É–ø–ø –Æ–ì–£\n\n'
    '‚ö° –ë–æ–ª–µ–µ —Å—Ç–∞–±–∏–ª—å–Ω–∞—è –∏ –±—ã—Å—Ç—Ä–∞—è —Ä–∞–±–æ—Ç–∞ –±–ª–∞–≥–æ–¥–∞—Ä—è –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–º—É –∫–æ–¥—É\n\n'
    'üé® –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ —Ç–µ–º—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è ‚Äî –≤—ã–±–µ—Ä–∏ —Å–≤–æ–π —Å—Ç–∏–ª—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è /theme\n\n'
    'üõ† –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ ‚Äî —Ç–µ–ø–µ—Ä—å –±–æ—Ç —Ä–µ–∂–µ –∑–∞–≤–∏—Å–∞–µ—Ç(–Ω–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ)\n\n'
    '‚ú® –ú–∞–ª–µ–Ω—å–∫–∏–µ —É–ª—É—á—à–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\n\n'
    '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤—ã–±–µ—Ä–∏ —Å–≤–æ—é –≥—Ä—É–ø–ø—É: /group\n\n'
    
)
    await message.answer(update_text)

@router.message(Command('theme'))
async def start_message(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏ —Ç–µ–º—É:', reply_markup=inline.themes_keyboard())

@router.message(Command('info'))
async def group_command(message: types.Message):
    await message.answer('–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n/start - –ø–æ–ª–Ω—ã–π –ø–µ—Ä–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞, —Å–º–µ–Ω–∞ –≥—Ä—É–ø–ø—ã\n/group - –∏–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É\n/theme - –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è\n–°–æ–æ–±—â–∞—Ç—å –æ –±–∞–≥–∞—Ö, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö –∏ —Ç–¥: @panteleeyy', reply_markup=reply.keyboard_look)

@router.message(Command('group'))
async def group_command(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç:', reply_markup=common_func.find_faculties())
@router.message(lambda message: '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è' == message.text.lower())
async def ansewer(message: types.Message):
    today_date = datetime.today().date()
    day, month = common_func.date_to_text(today_date)
    weekday = common_func.get_weekday(today_date)

    await async_func.shedule_by_date(message, today_date, day, month, weekday)

@router.message(lambda message: '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞' == message.text.lower())
async def ansewer(message: types.Message):
    tommorow_date = datetime.today().date() + timedelta(days=1)
    day, month = common_func.date_to_text(tommorow_date)
    weekday = common_func.get_weekday(tommorow_date)

    await async_func.shedule_by_date(message, tommorow_date, day, month, weekday)

@router.message(lambda message: '–≤—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É' == message.text.lower())
async def ansewer(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å', reply_markup=common_func.dates_to_keyboard())
@router.message(lambda message: any(month in message.text for month in const_dictionary.MONTHS.values()))
async def answer(message: types.Message):
    day, month = common_func.text_to_date(message.text)
    year = datetime.today().year
    
    user_date = datetime.strptime(f'{year}-{month}-{day}', '%Y-%m-%d').date()
    day, month = common_func.date_to_text(user_date)

    weekday_part = user_date.weekday()
    weekday = const_dictionary.WEEKDAYS.get(weekday_part) 

    await async_func.shedule_by_date(message, user_date, day, month, weekday)
    
@router.message(lambda msg: msg.from_user.id == ADMIN_ID and msg.text.lower() == SECRET_WORD_LOGS.lower())
async def what(message: types.Message):
    now_time = datetime.now().strftime('%d.%m.%Y - %H:%M:%S')

    await message.answer_document(document=types.FSInputFile(path='logs.json'), caption=f'–õ–æ–≥–∏ –±–æ—Ç–∞ –∑–∞ {now_time}, requests - {async_func.request_counter}')
    await message.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)

@router.message(lambda msg: msg.from_user.id == ADMIN_ID and msg.text.lower() == SECRET_WORD_CONFIGS.lower())
async def what(message: types.Message):
    await message.answer('–∏–±–∞ —á–æ—Ç–∫–æ')
    now_time = datetime.now().strftime('%d.%m.%Y - %H:%M:%S')

    await message.answer_document(document=types.FSInputFile(path='user_settings.json'), caption=f'–ö–æ–Ω—Ñ–∏–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ {now_time}')
    await message.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)